{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/Header.js","components/Scroll.js","components/SearchBox.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","name","symbol","spiritColor","luckyNumbers","luckyDay","rulingPlanet","qualities","emojis","className","alt","src","label","style","backgroundColor","red","yellow","gold","blue","crimson","purple","join","planet","CardList","signs","map","sign","index","id","key","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Header","nextProps","nextState","Scroll","overflow","height","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","App","onRequestSigns","onSearchChange","isPending","filteredSigns","filter","toLowerCase","includes","ErrorBoundry","connect","searchSigns","requestSigns","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateSigns","logger","createLogger","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d901fd3.chunk.js","sourcesContent":["import React from 'react';\nimport Emoji from 'a11y-react-emoji';\n\nconst Card = ({\n  name,\n  symbol,\n  spiritColor,\n  luckyNumbers,\n  luckyDay,\n  rulingPlanet,\n  qualities,\n  emojis,\n}) => {\n  const hex = {\n    red: '#FF0000',\n    'pale blue': '#afeeee',\n    yellow: '#ffff00',\n    'sea green': '#2e8b57',\n    gold: '#ffd700',\n    'navy blue': '#000080',\n    blue: '#0000ff',\n    crimson: '#dc143c',\n    purple: '#800080',\n    'dark green': '#006400',\n    'electric blue': '#7df9ff',\n    'pale green': '#98fb98',\n  };\n\n  return (\n    <div className='card tc grow bg-light-pink br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='sign' src={`./images/${name}.png`} />\n      <h2 className='ttu tracked'>\n        {name}\n        <Emoji symbol={emojis.name} label={name} />\n      </h2>\n\n      <div className='ttu'>\n        <span className='b'>Symbol:</span> {symbol}{' '}\n        <Emoji symbol={emojis.symbol} label={symbol} />\n      </div>\n\n      <div className='ttu'>\n        <span className='b'>Spirit Color:</span> {spiritColor}\n        <div\n          className='square-color'\n          style={{ backgroundColor: hex[spiritColor] }}\n        />\n      </div>\n\n      <div className='ttu'>\n        <span className='b'>Lucky Numbers:</span> {luckyNumbers.join(', ')}\n      </div>\n\n      <div className='ttu'>\n        <span className='b'>Lucky Day:</span> {luckyDay}\n      </div>\n\n      <div className='ttu'>\n        <span className='b'>Ruling Planet:</span> {rulingPlanet}{' '}\n        <Emoji symbol={emojis.planet} label={rulingPlanet} />\n      </div>\n\n      <div className='ttu'>\n        <span className='b'>Qualities:</span> {qualities.join(', ')}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ signs }) => {\n  return (\n    <div className='flex flex-wrap justify-center'>\n      {signs.map((sign, index) => {\n        const {\n          id,\n          name,\n          spiritColor,\n          luckyNumbers,\n          symbol,\n          luckyDay,\n          rulingPlanet,\n          qualities,\n          emojis,\n        } = signs[index];\n        return (\n          <Card\n            key={index}\n            id={id}\n            name={name}\n            symbol={symbol}\n            spiritColor={spiritColor}\n            luckyNumbers={luckyNumbers}\n            luckyDay={luckyDay}\n            rulingPlanet={rulingPlanet}\n            qualities={qualities}\n            emojis={emojis}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='f1'>WHAT'S YOUR SIGN?</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', height: '800px' }}>{props.children}</div>\n  );\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        aria-label='Search'\n        className='pa3 ba b--purple bg-washed-red'\n        type='search'\n        placeholder='Search Sign'\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setSearchField, requestSigns } from '../actions';\n\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchSigns.searchField,\n    signs: state.requestSigns.signs,\n    isPending: state.requestSigns.isPending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestSigns: () => requestSigns(dispatch),\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.onRequestSigns();\n  }\n\n  render() {\n    const { signs, searchField, onSearchChange, isPending } = this.props;\n    const filteredSigns = signs.filter((sign) => {\n      return sign.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className='tc'>\n        <Header />\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          {isPending ? (\n            <h1>Loading</h1>\n          ) : (\n            <ErrorBoundry>\n              <CardList signs={filteredSigns} />\n            </ErrorBoundry>\n          )}\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_SIGN_PENDING,\n  REQUEST_SIGN_SUCCESS,\n  REQUEST_SIGN_FAILED,\n} from './constants.js';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestSigns = (dispatch) => {\n  dispatch({ type: REQUEST_SIGN_PENDING });\n\n  fetch(\n    'https://my-json-server.typicode.com/sophie-li/astrology-json-server/astrology'\n  )\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_SIGN_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: REQUEST_SIGN_FAILED, payload: error }));\n};\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_SIGN_PENDING = 'REQUEST_SIGN_PENDING';\nexport const REQUEST_SIGN_SUCCESS = 'REQUEST_SIGN_SUCCESS';\nexport const REQUEST_SIGN_FAILED = 'REQUEST_SIGN_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_SIGN_PENDING,\n  REQUEST_SIGN_SUCCESS,\n  REQUEST_SIGN_FAILED,\n} from './constants.js';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nexport const searchSigns = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateSigns = {\n  signs: [],\n  isPending: true,\n};\n\nexport const requestSigns = (state = initialStateSigns, action = {}) => {\n  switch (action.type) {\n    case REQUEST_SIGN_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_SIGN_SUCCESS:\n      return Object.assign({}, state, {\n        signs: action.payload,\n        isPending: false,\n      });\n    case REQUEST_SIGN_FAILED:\n      return Object.assign({}, state, { error: action.payload });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport 'tachyons';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { requestSigns, searchSigns } from './reducers';\n\nconst logger = createLogger();\nconst rootReducers = combineReducers({ requestSigns, searchSigns });\nconst store = createStore(\n  rootReducers,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}